version: "2"
networks:
  redash_network:

x-redash-service: &redash-service
  image: redash/redash:8.0.0.b32245
  depends_on:
    - postgres
    - redis
  env_file: .env
  restart: always
  networks:
    - redash_network 
services:
  server:
    <<: *redash-service
    command: server
    ports:
      - "5000:5000"
    environment:
      REDASH_WEB_WORKERS: 4
    networks:
      - redash_network 
  scheduler:
    <<: *redash-service
    command: scheduler
    environment:
      QUEUES: "celery"
      WORKERS_COUNT: 1
  scheduled_worker:
    <<: *redash-service
    command: worker
    environment:
      QUEUES: "scheduled_queries,schemas"
      WORKERS_COUNT: 1
    networks:
      - redash_network 
  adhoc_worker:
    <<: *redash-service
    command: worker
    environment:
      QUEUES: "queries"
      WORKERS_COUNT: 2
    networks:
      - redash_network 
  redis:
    image: redis:5.0-alpine
    container_name: redis
    restart: always
    networks:
      - redash_network 
  postgres:
    image: postgres:9.6-alpine
    container_name: postgres
    env_file: .env
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    restart: always
    networks:
      - redash_network 
  nginx:
    image: redash/nginx:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redash.rule=Host(`redash.localhost`)"
      - "traefik.http.routers.redash.tls=true"
      - "traefik.http.routers.redash.tls.certresolver=le"
      - "traefik.http.services.redash.loadbalancer.server.port=80"
    networks:
      - redash_network   
    depends_on:
      - server
    links:
      - server:redash
    restart: always
networks:
    redash_network:
        external: true